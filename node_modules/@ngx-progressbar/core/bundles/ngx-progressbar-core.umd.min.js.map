{
  "version": 3,
  "file": "ngx-progressbar-core.umd.min.js",
  "sources": [
    "ng://@ngx-progressbar/core/out/ng-progress.component.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.module.ts",
    "ng://@ngx-progressbar/core/out/ng-progress-ref.ts",
    "ng://@ngx-progressbar/core/node_modules/tslib/tslib.es6.js",
    "ng://@ngx-progressbar/core/out/ng-progress.token.ts",
    "ng://@ngx-progressbar/core/out/ng-progress.service.ts"
  ],
  "sourcesContent": [
    "/**\r\n * @license\r\n * Copyright ngx-progressbar All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://github.com/MurhafSousli/ngx-progressbar/blob/master/LICENSE\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressState } from './ng-progress.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { map } from 'rxjs/operators/map';\r\n\r\n@Component({\r\n  selector: 'ng-progress',\r\n  host: {\r\n    'role': 'progressbar',\r\n    '[attr.spinnerPosition]': 'spinnerPosition',\r\n    '[attr.dir]': 'direction',\r\n    '[attr.thick]': 'thick'\r\n  },\r\n  template: `\r\n    <ng-container *ngIf=\"state$ | async; let state\">\r\n      <div class=\"ng-progress-bar\"\r\n            [class.-active]=\"state.active\"\r\n            [style.transition]=\"'opacity ' + speed + 'ms ' + ease\">\r\n        <div class=\"ng-bar-placeholder\">\r\n          <div class=\"ng-bar\"\r\n                [style.transform]=\"state.transform\"\r\n                [style.backgroundColor]=\"color\"\r\n                [style.transition]=\"state.active ? 'all ' + speed + 'ms ' + ease : 'none'\">\r\n            <div *ngIf=\"meteor\" class=\"ng-meteor\" [style.boxShadow]=\"'0 0 10px '+ color + ', 0 0 5px ' + color\"></div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"spinner\" class=\"ng-spinner\">\r\n          <div class=\"ng-spinner-icon\"\r\n                [style.borderTopColor]=\"color\"\r\n                [style.borderLeftColor]=\"color\"></div>\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  `,\r\n  styles: [`ng-progress{z-index:999999;pointer-events:none;position:relative}.ng-progress-bar{z-index:999999;top:0;left:0;width:100%;position:fixed;zoom:1;opacity:0}.ng-progress-bar.-active{opacity:1;-webkit-transition:none;transition:none}.ng-bar-placeholder{position:absolute;height:2px;width:100%}.ng-bar{width:100%;height:100%;-webkit-transform:translate(-100%,0,0);transform:translate(-100%,0,0)}.ng-meteor{display:block;position:absolute;width:100px;height:100%;opacity:1}.ng-spinner{display:block;position:fixed;z-index:1031;top:15px}.ng-spinner-icon{width:18px;height:18px;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-animation:.4s linear infinite spinner-animation;animation:.4s linear infinite spinner-animation;border:2px solid transparent;border-radius:50%}[dir='ltr+'] .ng-meteor,[dir=ltr-] .ng-meteor{-webkit-transform:rotate(3deg);transform:rotate(3deg)}[dir='ltr+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{-webkit-transform:rotate(4deg);transform:rotate(4deg)}[dir='ltr+'] .ng-bar,[dir='rtl+'] .ng-bar{margin-left:-100%}[dir='ltr+'] .ng-meteor,[dir='rtl+'] .ng-meteor{right:0}[dir='ltr+'] .ng-meteor,[dir=rtl-] .ng-meteor{top:-3px}[dir='ltr+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{top:-4px}[dir='rtl+'] .ng-meteor,[dir=ltr-] .ng-meteor{bottom:-3px}[dir='rtl+'][thick=true] .ng-meteor,[dir=ltr-][thick=true] .ng-meteor{bottom:-4px}[dir='rtl+'] .ng-bar-placeholder,[dir=ltr-] .ng-bar-placeholder{-webkit-transform:rotate(180deg);transform:rotate(180deg)}[dir='rtl+'] .ng-spinner-icon,[dir=ltr-] .ng-spinner-icon{animation-direction:reverse}[dir='rtl+'] .ng-meteor,[dir=rtl-] .ng-meteor{-webkit-transform:rotate(-3deg);transform:rotate(-3deg)}[dir='rtl+'][thick=true] .ng-meteor,[dir=rtl-][thick=true] .ng-meteor{-webkit-transform:rotate(-4deg);transform:rotate(-4deg)}[thick=true] .ng-spinner-icon{width:24px;height:24px;border-width:3px}[thick=true] .ng-bar-placeholder{height:3px}[spinnerPosition=left] .ng-spinner{left:15px;right:unset}[spinnerPosition=right] .ng-spinner{right:15px}@-webkit-keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes spinner-animation{0%{-webkit-transform:rotate(0);transform:rotate(0)}100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}`],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  preserveWhitespaces: false\r\n})\r\n\r\nexport class NgProgressComponent implements OnInit, OnChanges, OnDestroy {\r\n\r\n  private _started$: Subscription;\r\n  private _completed$: Subscription;\r\n\r\n  /** Progress bar worker */\r\n  progressRef: NgProgressRef;\r\n\r\n  /** Progress state stream */\r\n  state$: Observable<{ active: boolean, transform: string }>;\r\n\r\n  /** Creates a new instance if id is not already exists */\r\n  @Input() id = 'root';\r\n\r\n  /** Initializes inputs from the global config */\r\n  @Input() spinnerPosition: 'left' | 'right' = this._ngProgress.config.spinnerPosition;\r\n  @Input() direction: 'ltr+' | 'ltr-' | 'rtl+' | 'rtl-' = this._ngProgress.config.direction;\r\n  @Input() ease: string = this._ngProgress.config.ease;\r\n  @Input() color: string = this._ngProgress.config.color;\r\n  @Input() meteor: boolean = this._ngProgress.config.meteor;\r\n  @Input() spinner: boolean = this._ngProgress.config.spinner;\r\n  @Input() thick: boolean = this._ngProgress.config.thick;\r\n  @Input() max: number = this._ngProgress.config.max;\r\n  @Input() min: number = this._ngProgress.config.min;\r\n  @Input() speed: number = this._ngProgress.config.speed;\r\n  @Input() trickleSpeed: number = this._ngProgress.config.trickleSpeed;\r\n  @Input() trickleFunc: (n: number) => number = this._ngProgress.config.trickleFunc;\r\n  @Input() debounceTime: number = this._ngProgress.config.debounceTime;\r\n  @Output() started = new EventEmitter();\r\n  @Output() completed = new EventEmitter();\r\n\r\n  constructor(private _ngProgress: NgProgress) {\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.progressRef instanceof NgProgressRef) {\r\n      // Update progress bar config when inputs change\r\n      this.progressRef.setConfig({\r\n        max: (this.max > 0 && this.max <= 100) ? this.max : 100,\r\n        min: (this.min < 100 && this.min >= 0) ? this.min : 0,\r\n        speed: this.speed,\r\n        trickleSpeed: this.trickleSpeed,\r\n        trickleFunc: this.trickleFunc,\r\n        debounceTime: this.debounceTime\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Get progress bar service instance\r\n    this.progressRef = this._ngProgress.ref(this.id, {\r\n      max: this.max,\r\n      min: this.min,\r\n      speed: this.speed,\r\n      trickleSpeed: this.trickleSpeed,\r\n      debounceTime: this.debounceTime\r\n    });\r\n    this.state$ = this.progressRef.state$.pipe(map((state: NgProgressState) => ({\r\n      active: state.active,\r\n      transform: `translate3d(${state.value}%,0,0)`\r\n    })));\r\n    /** Subscribes to started and completed events when user used them */\r\n    if (this.started.observers.length) {\r\n      this._started$ = this.progressRef.started.subscribe(() => this.started.emit());\r\n    }\r\n    if (this.completed.observers.length) {\r\n      this._completed$ = this.progressRef.completed.subscribe(() => this.completed.emit());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._started$) {\r\n      this._started$.unsubscribe();\r\n    }\r\n    if (this._completed$) {\r\n      this._completed$.unsubscribe();\r\n    }\r\n    this._ngProgress.destroy(this.id);\r\n  }\r\n\r\n  start() {\r\n    this.progressRef.start();\r\n  }\r\n\r\n  complete() {\r\n    this.progressRef.complete();\r\n  }\r\n\r\n  inc(n?: number) {\r\n    this.progressRef.inc(n);\r\n  }\r\n\r\n  set(n: number) {\r\n    this.progressRef.set(n);\r\n  }\r\n\r\n  get isStarted() {\r\n    return this.progressRef.isStarted;\r\n  }\r\n}\r\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgProgressComponent } from './ng-progress.component';\r\nimport { NgProgress } from './ng-progress.service';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\nimport { CONFIG } from './ng-progress.token';\r\n\r\nexport function NgProgressFactory(config: NgProgressConfig) {\r\n  return new NgProgress(config);\r\n}\r\n\r\n@NgModule({\r\n  declarations: [NgProgressComponent],\r\n  exports: [NgProgressComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class NgProgressModule {\r\n  static forRoot(config?: NgProgressConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgProgressModule,\r\n      providers: [\r\n        {provide: CONFIG, useValue: config},\r\n        {\r\n          provide: NgProgress,\r\n          useFactory: NgProgressFactory,\r\n          deps: [CONFIG]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n",
    "import { NgProgressState, NgProgressConfig } from './ng-progress.interface';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { timer } from 'rxjs/observable/timer';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { tap } from 'rxjs/operators/tap';\r\nimport { map } from 'rxjs/operators/map';\r\nimport { skip } from 'rxjs/operators/skip';\r\nimport { delay } from 'rxjs/operators/delay';\r\nimport { filter } from 'rxjs/operators/filter';\r\nimport { debounce } from 'rxjs/operators/debounce';\r\nimport { switchMap } from 'rxjs/operators/switchMap';\r\nimport { combineLatest} from 'rxjs/operators/combineLatest';\r\nimport { distinctUntilChanged } from 'rxjs/operators/distinctUntilChanged';\r\n\r\nexport class NgProgressRef {\r\n\r\n  private _state: NgProgressState = {active: false, value: 0};\r\n  private _config: NgProgressConfig;\r\n\r\n  /** Stream that increments and updates progress state */\r\n  private _trickling$ = new Subject();\r\n\r\n  /** Stream that emits when progress state is changed */\r\n  state$ = new BehaviorSubject<NgProgressState>(this._state);\r\n\r\n  /** Stream that emits when config is changed */\r\n  config$ = new Subject<NgProgressConfig>();\r\n\r\n  get isStarted(): boolean {\r\n    return this._state.active;\r\n  }\r\n\r\n  /** Progress start event */\r\n  get started(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => active)\r\n    );\r\n  }\r\n\r\n  /** Progress ended event */\r\n  get completed(): Observable<boolean> {\r\n    return this.state$.pipe(\r\n      map((state: NgProgressState) => state.active),\r\n      distinctUntilChanged(),\r\n      filter(active => !active),\r\n      skip(1)\r\n    );\r\n  }\r\n\r\n  constructor(customConfig: NgProgressConfig) {\r\n\r\n    /**\r\n     * Trickling stream starts the timer that increment the progress bar continuously\r\n     * This stream makes it possible to use latest config values while incrementing\r\n     */\r\n    this._trickling$.pipe(\r\n      debounce((start: boolean) => timer(start ? this._config.debounceTime : 0)),\r\n      combineLatest(this.config$),\r\n      switchMap(([start, config]: [boolean, NgProgressConfig]) => start ? this._trickling(config) : this._complete(config))\r\n    ).subscribe();\r\n\r\n    this.setConfig(customConfig);\r\n  }\r\n\r\n  start() {\r\n    this._trickling$.next(true);\r\n  }\r\n\r\n  complete() {\r\n    this._trickling$.next(false);\r\n  }\r\n\r\n  inc(amount?: number) {\r\n    const n = this._state.value;\r\n    if (!this.isStarted) {\r\n      this.start();\r\n    } else {\r\n      if (typeof amount !== 'number') {\r\n        amount = this._config.trickleFunc(n);\r\n      }\r\n      this.set(n + amount);\r\n    }\r\n  }\r\n\r\n  set(n: number) {\r\n    this._setState({value: this._clamp(n), active: true});\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig) {\r\n    this._config = {...this._config, ...config};\r\n    this.config$.next(this._config);\r\n  }\r\n\r\n  /**\r\n   * Meant to be used internally and not by user directly\r\n   * Users should use NgProgressManager.destroy(id) instead\r\n   */\r\n  destroy() {\r\n    this._trickling$.complete();\r\n    this.state$.complete();\r\n    this.config$.complete();\r\n  }\r\n\r\n  private _setState(state: NgProgressState) {\r\n    this._state = {...this._state, ...state};\r\n    this.state$.next(this._state);\r\n  }\r\n\r\n  /** Clamps a value to be between min and max */\r\n  private _clamp(n): number {\r\n    return Math.max(this._config.min, Math.min(this._config.max, n));\r\n  }\r\n\r\n  /** Keeps incrementing the progress */\r\n  private _trickling(config: NgProgressConfig) {\r\n    if (!this.isStarted) {\r\n      this.set(this._config.min);\r\n    }\r\n    return timer(0, config.trickleSpeed).pipe(tap(() => this.inc()));\r\n  }\r\n\r\n  /** Completes then resets the progress */\r\n  private _complete(config: NgProgressConfig) {\r\n    return !this.isStarted ? of({}) : of({}).pipe(\r\n      // Completes the progress\r\n      tap(() => this._setState({value: 100})),\r\n\r\n      // Hides the progress bar after a tiny delay\r\n      delay(config.speed * 1.7),\r\n      tap(() => this._setState({active: false})),\r\n\r\n      // Resets the progress state\r\n      delay(config.speed),\r\n      tap(() => this._setState({value: 0}))\r\n    );\r\n  }\r\n}\r\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n",
    "import { InjectionToken } from '@angular/core';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\n\r\nexport const CONFIG = new InjectionToken<NgProgressConfig>('config');\r\n",
    "import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { NgProgressRef } from './ng-progress-ref';\r\nimport { NgProgressConfig } from './ng-progress.interface';\r\nimport { empty } from 'rxjs/observable/empty';\r\nimport { CONFIG } from './ng-progress.token';\r\n\r\nconst defaultConfig: NgProgressConfig = {\r\n  meteor: true,\r\n  spinner: true,\r\n  thick: false,\r\n  ease: 'linear',\r\n  spinnerPosition: 'right',\r\n  direction: 'ltr+',\r\n  color: '#1B95E0',\r\n  max: 100,\r\n  min: 8,\r\n  speed: 200,\r\n  trickleSpeed: 300,\r\n  debounceTime: 0,\r\n  trickleFunc: (n: number): number => {\r\n    if (n >= 0 && n < 20) return 10;\r\n    if (n >= 20 && n < 50) return 4;\r\n    if (n >= 50 && n < 80) return 2;\r\n    if (n >= 80 && n < 99) return 0.5;\r\n    return 0;\r\n  }\r\n};\r\n\r\n@Injectable()\r\nexport class NgProgress {\r\n\r\n  /** Stores NgProgressRef instances */\r\n  private readonly _instances = {};\r\n\r\n  /** Global config */\r\n  config: NgProgressConfig;\r\n\r\n  constructor(@Optional() @Inject(CONFIG) config: NgProgressConfig) {\r\n    this.config = {...defaultConfig, ...config};\r\n  }\r\n\r\n  /**\r\n   * Returns NgProgressRef by ID\r\n   */\r\n  ref(id = 'root', config?: NgProgressConfig) {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      return this._instances[id];\r\n    } else {\r\n      config = {...this.config, ...config};\r\n      return this._instances[id] = new NgProgressRef(config);\r\n    }\r\n  }\r\n\r\n  setConfig(config: NgProgressConfig, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].setConfig(config);\r\n    }\r\n  }\r\n\r\n  start(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].start();\r\n    }\r\n  }\r\n\r\n  set(n: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].set(n);\r\n    }\r\n  }\r\n\r\n  inc(n?: number, id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].inc(n);\r\n    }\r\n  }\r\n\r\n  complete(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].complete();\r\n    }\r\n  }\r\n\r\n  isStarted(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].isStarted : false;\r\n  }\r\n\r\n  started(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].started : empty();\r\n  }\r\n\r\n  completed(id = 'root') {\r\n    return (this._instances[id] instanceof NgProgressRef) ? this._instances[id].ended : empty();\r\n  }\r\n\r\n  destroy(id = 'root') {\r\n    if (this._instances[id] instanceof NgProgressRef) {\r\n      this._instances[id].destroy();\r\n      this._instances[id] = null;\r\n    }\r\n  }\r\n\r\n  destroyAll() {\r\n    Object.keys(this._instances).map((key) => {\r\n      this._instances[key].destroy();\r\n      this._instances[key] = null;\r\n    });\r\n  }\r\n}\r\n"
  ],
  "names": [
    "NgProgressComponent",
    "_ngProgress",
    "this",
    "id",
    "spinnerPosition",
    "config",
    "direction",
    "ease",
    "color",
    "meteor",
    "spinner",
    "thick",
    "max",
    "min",
    "speed",
    "trickleSpeed",
    "trickleFunc",
    "debounceTime",
    "started",
    "EventEmitter",
    "completed",
    "prototype",
    "ngOnChanges",
    "progressRef",
    "NgProgressRef",
    "setConfig",
    "ngOnInit",
    "_this",
    "ref",
    "state$",
    "pipe",
    "map",
    "state",
    "active",
    "transform",
    "value",
    "observers",
    "length",
    "_started$",
    "subscribe",
    "emit",
    "_completed$",
    "ngOnDestroy",
    "unsubscribe",
    "destroy",
    "start",
    "complete",
    "inc",
    "n",
    "set",
    "Object",
    "defineProperty",
    "get",
    "isStarted",
    "NgProgressFactory",
    "NgProgress",
    "type",
    "Component",
    "args",
    "selector",
    "host",
    "role",
    "[attr.spinnerPosition]",
    "[attr.dir]",
    "[attr.thick]",
    "template",
    "styles",
    "encapsulation",
    "ViewEncapsulation",
    "None",
    "changeDetection",
    "ChangeDetectionStrategy",
    "OnPush",
    "preserveWhitespaces",
    "Input",
    "Output",
    "NgProgressModule",
    "forRoot",
    "ngModule",
    "providers",
    "provide",
    "CONFIG",
    "useValue",
    "useFactory",
    "deps",
    "NgModule",
    "declarations",
    "exports",
    "imports",
    "CommonModule",
    "customConfig",
    "_state",
    "_trickling$",
    "Subject",
    "BehaviorSubject",
    "config$",
    "debounce",
    "timer",
    "_config",
    "combineLatest",
    "switchMap",
    "_a",
    "_b",
    "o",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "error",
    "__read",
    "_trickling",
    "_complete",
    "distinctUntilChanged",
    "filter",
    "skip",
    "amount",
    "_setState",
    "_clamp",
    "assign",
    "Math",
    "tap",
    "of",
    "delay",
    "InjectionToken",
    "defaultConfig",
    "_instances",
    "empty",
    "ended",
    "destroyAll",
    "keys",
    "key",
    "Injectable",
    "undefined",
    "decorators",
    "Optional",
    "Inject"
  ],
  "mappings": "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"
}
